package ${PACKAGE_NAME}

import android.util.Log
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.material3.Button
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.LaunchedEffect
import androidx.compose.runtime.collectAsState
import androidx.compose.runtime.getValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.navigation.NavHostController
import java.util.UUID

@Composable
fun ${NAME}Screen(
    navController: NavHostController,
    viewModel: ${NAME}ViewModel = ${NAME}ViewModel()
) {

    // Listen for navigation events sent by the ViewModel
    LaunchedEffect(key1 = UUID.randomUUID().toString()) {
        viewModel.navigationEvent.collect { event ->
            when (event) {
                is NavigationEvent.NavigateToNextScreen -> {
                    //TODO Add Destination Route
                    navController.navigate(NavigationEnum.AddDestination.route)
                }
            }
        }
    }
    DisplayContent(viewModel)
}

@Composable
private fun DisplayContent(viewModel: ${NAME}ViewModel) {
    // Display content based on uiState
    val uiState by viewModel.uiState.collectAsState()
    when {
        uiState.isLoading -> DisplayLoading()
        uiState.error != null -> DisplayError(uiState.error)
        uiState.data != null -> DisplayData(
            uiState= uiState,
            onEvent = viewModel::onEvent
        )
    }
}

@Composable
fun DisplayData(
    uiState: ${NAME}UiState,
    onEvent: (${NAME}Events) -> Unit = {},
) {
    if(uiState.data == null) {
        DisplayError(stringResource(R.string.no_data_to_display))
    } else {
        val data = uiState.data
        Box(
            modifier = Modifier.fillMaxSize(),
            contentAlignment = Alignment.Center
        ){
            Column(
                horizontalAlignment = Alignment.CenterHorizontally
            ) {
                Text(text = data.someData.orEmpty())
                Button(
                    onClick = {
                        onEvent(${NAME}Events.ButtonClicked)
                    }
                ) {
                    Text(text = "Click Me")
                }
            }
        }
    }
}
